import pandas as pd
import numpy as np

def minmax(dateset):
    minDf = dateset.min()
    maxDf = dateset.max()
    normSet = (dateset - minDf)/(maxDf - minDf)
    return normSet

def randSplit(dataset,rate= 0.9):
    n = dataset.shape[0]
    m = int(n*rate)
    train = dataset.iloc[:m,:]
    test = dataset.ilco[m:,:]
    test.index = range(test.shape[0])
    return train,test

datingT = pd.concat([minmax(datingTest.iloc[:,:3],datingTest.iloc[:,:3]],axis=1)
datingT.head()

def datingClass(train,test,k):
    n = train.shape[1] - 1                   
    m = test.shape[0]                         
    result = []                    
    for i in range(m):
        dist = list((((train.iloc[:, :n] - test.iloc[i, :n]) ** 2).sum(1))**0.5)
        dist_l = pd.DataFrame({'dist': dist, 'labels': (train.iloc[:, n])})
        dr = dist_l.sort_values(by = 'dist')[: k]
        re = dr.loc[:, 'labels'].value_counts()
        result.append(re.index[0])
    result = pd.Series(result)
    test['predict'] = result
    acc = (test.iloc[:,-1]==test.iloc[:,-2]).mean()
    print(f'模型预测准确率为{acc}')
    return test
